{"version":3,"file":"commons-82e8e43bf0b173d598cb.js","mappings":"2MA2BA,EAlBe,WACb,IAAMA,GAAQC,EAAAA,EAAAA,KAEd,OACEC,EAAAA,EAAAA,IAAAA,SAAAA,CAAQC,KAAKA,EAAAA,EAAAA,IAAF,wBACiBH,EAAMI,OAAOC,QAAQ,GADtC,kDAIOL,EAAMI,OAAOC,QAAQ,GAJ5B,UAKEL,EAAMI,OAAOC,QAAQ,IALvB,eAAX,MAOK,IAAIC,MAAOC,cAPhB,oBASEL,EAAAA,EAAAA,IAACM,EAAAA,EAAD,CAAMC,GAAG,4BAAT,UAbN,ECqBA,EArBe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAiBC,GAAe,EAAtBC,MAAsB,EAAfD,UAE3BE,EADQ,MACKH,EAASI,SACtBd,GAAQC,EAAAA,EAAAA,KAEd,OACEC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,KAAKA,EAAAA,EAAAA,IAAF,cACQH,EAAMI,OAAOC,QAAQ,GAD7B,+BAGL,oBAAmBQ,IACpBX,EAAAA,EAAAA,IAAAA,OAAAA,CAAMC,KAAKA,EAAAA,EAAAA,IAAF,aACMH,EAAMe,YAAY,GADxB,kCAGLJ,IACJT,EAAAA,EAAAA,IAACc,EAAD,OAfR,C,yDCEMC,EAAM,SAAC,GAA4C,IAAD,MAAzCC,EAAyC,EAAzCA,YAAmBN,GAAsB,EAA5BO,KAA4B,EAAtBP,OAAOD,EAAe,EAAfA,SAC/BS,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAGE,EAAmBb,MAExC,OACEV,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,QAAAA,KAAQsB,EAAkBZ,EAAN,MAAiBY,EAAiBZ,IACtDV,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,cAAcC,QAASL,KAClCpB,EAAAA,EAAAA,IAAAA,OAAAA,CAAM0B,SAAS,WAAWD,QAASf,KACnCV,EAAAA,EAAAA,IAAAA,OAAAA,CAAM0B,SAAS,iBAAiBD,QAASL,KACzCpB,EAAAA,EAAAA,IAAAA,OAAAA,CAAM0B,SAAS,UAAUD,QAAQ,aACjCzB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,eAAeC,QAAQ,aAClCzB,EAAAA,EAAAA,IAAAA,OAAAA,CACEwB,KAAK,kBACLC,SAAS,UAAAP,EAAKG,oBAAL,mBAAmBM,cAAnB,eAA2BC,UAA3B,MAEX5B,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,gBAAgBC,QAASf,KACpCV,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,sBAAsBC,QAASL,IACzCX,EAlCP,EAuCAM,EAAIc,aAAe,CACjBb,YAAY,IAQd,K","sources":["webpack://gatsby-starter-blog/./src/components/footer.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { useTheme } from \"@emotion/react\";\nimport { useRecoilState } from \"recoil\";\nimport { light, dark, themeState } from \"../styles/theme\";\nimport Link from \"./link\";\nimport lottie, { AnimationItem } from \"lottie-web\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nconst Footer = () => {\n  const theme = useTheme();\n\n  return (\n    <footer css={css`\n        border-top: 1px solid ${theme.colors.default[1]};\n        padding: 50px 0px;\n        text-align: center;\n        background: ${theme.colors.default[0]};\n        color: ${theme.colors.default[10]}\n        `}>\n      Â© {new Date().getFullYear()}, Built with\n      {` `}\n      <Link to=\"https://www.gatsbyjs.com\">Gatsby</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { Global, ThemeProvider, useTheme } from \"@emotion/react\";\nimport { css } from \"@emotion/react\";\nimport Header from \"./header\";\nimport BaseLayout from \"./base-layout\";\nimport { GlobalStyle } from \"../styles/global\";\nimport Footer from \"./footer\";\nimport Test from \"./test\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  const theme = useTheme();\n\n  return (\n    <>\n      <div css={css`\n        background: ${theme.colors.default[0]};\n        min-height: 100vh;\n      `} data-is-root-path={isRootPath}>\n        <main css={css`\n          max-width: ${theme.breakpoints[3]}px;\n          margin: 60px auto;\n        `}>{children}</main>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    social {\n                        twitter\n                    }\n                }\n            }\n        }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nSeo.defaultProps = {\n  description: ``\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nexport default Seo;\n"],"names":["theme","useTheme","___EmotionJSX","css","colors","default","Date","getFullYear","Link","to","location","children","title","isRootPath","pathname","breakpoints","Footer","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","social","twitter","defaultProps"],"sourceRoot":""}