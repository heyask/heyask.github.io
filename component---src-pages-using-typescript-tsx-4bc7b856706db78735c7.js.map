{"version":3,"file":"component---src-pages-using-typescript-tsx-4bc7b856706db78735c7.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" children={undefined} lang={undefined} />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n"],"names":["header","location","title","children","isRootPath","pathname","React","className","Link","to","Date","getFullYear","href","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","social","twitter","defaultProps","Head","undefined","data","path","Layout","buildTime"],"sourceRoot":""}