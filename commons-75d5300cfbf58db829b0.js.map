{"version":3,"file":"commons-75d5300cfbf58db829b0.js","mappings":"2MA0BA,EAjBe,WACb,IAAMA,GAAQC,EAAAA,EAAAA,KAEd,OACEC,EAAAA,EAAAA,IAAAA,SAAAA,CAAQC,KAAKA,EAAAA,EAAAA,IAAF,2DAIAH,EAAMI,OAAOC,QAAQ,IAJrB,eAAX,MAMK,IAAIC,MAAOC,cANhB,oBAQEL,EAAAA,EAAAA,IAACM,EAAAA,EAAD,CAAMC,GAAG,4BAAT,UAZN,E,UCiBA,EApBe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAiBC,GAAe,EAAtBC,MAAsB,EAAfD,UAE3BE,EADQ,MACKH,EAASI,UACdb,EAAAA,EAAAA,KAEd,OACEC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,KAAKA,EAAAA,EAAAA,IAAF,aACL,oBAAmBU,IACpBX,EAAAA,EAAAA,IAAAA,OAAAA,CAAMC,KAAKA,EAAAA,EAAAA,IAAF,8CAGMY,EAAAA,GAHN,qBAILJ,IACJT,EAAAA,EAAAA,IAACc,EAAD,OAdR,C,yDCKMC,EAAM,SAAC,GAA4C,IAAD,MAAzCC,EAAyC,EAAzCA,YAAmBN,GAAsB,EAA5BO,KAA4B,EAAtBP,OAAOD,EAAe,EAAfA,SAC/BS,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAGE,EAAmBb,MAExC,OACEV,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,QAAAA,KAAQsB,EAAkBZ,EAAN,MAAiBY,EAAiBZ,IACtDV,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,cAAcC,QAASL,KAClCpB,EAAAA,EAAAA,IAAAA,OAAAA,CAAM0B,SAAS,WAAWD,QAASf,KACnCV,EAAAA,EAAAA,IAAAA,OAAAA,CAAM0B,SAAS,iBAAiBD,QAASL,KACzCpB,EAAAA,EAAAA,IAAAA,OAAAA,CAAM0B,SAAS,UAAUD,QAAQ,aACjCzB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,eAAeC,QAAQ,aAClCzB,EAAAA,EAAAA,IAAAA,OAAAA,CACEwB,KAAK,kBACLC,SAAS,UAAAP,EAAKG,oBAAL,mBAAmBM,cAAnB,eAA2BC,UAA3B,MAEX5B,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,gBAAgBC,QAASf,KACpCV,EAAAA,EAAAA,IAAAA,OAAAA,CAAMwB,KAAK,sBAAsBC,QAASL,IACzCX,EAlCP,EAuCAM,EAAIc,aAAe,CACjBb,YAAY,IAQd,K,uBC3De,SAASc,EAA4BC,EAASC,GAM3D,OALKA,IACHA,EAAMD,EAAQE,MAAM,IAGtBF,EAAQC,IAAMA,EACPD,CACT,C,6ECLalB,GAASqB,EAAAA,EAAAA,IAAH,0EAQNC,IAJUD,EAAAA,EAAAA,IAAH,6FAIQA,EAAAA,EAAAA,IAAH,mJ","sources":["webpack://gatsby-starter-blog/./src/components/footer.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://gatsby-starter-blog/./src/styles/keyframes.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { useTheme } from \"@emotion/react\";\nimport { useRecoilState } from \"recoil\";\nimport { light, dark, themeState } from \"../styles/theme\";\nimport Link from \"./link\";\nimport lottie, { AnimationItem } from \"lottie-web\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nconst Footer = () => {\n  const theme = useTheme();\n\n  return (\n    <footer css={css`\n      font-size: 14px;\n      padding: 50px 0px;\n      text-align: center;\n      color: ${theme.colors.default[10]}\n    `}>\n      Â© {new Date().getFullYear()}, Built with\n      {` `}\n      <Link to=\"https://www.gatsbyjs.com\">Gatsby</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { useTheme } from \"@emotion/react\";\nimport { css } from \"@emotion/react\";\nimport Footer from \"./footer\";\nimport { fadeIn } from \"../styles/keyframes\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  const theme = useTheme();\n\n  return (\n    <>\n      <div css={css`\n      `} data-is-root-path={isRootPath}>\n        <main css={css`\n          min-height: 80vh;\n          margin: 60px auto;\n          animation: ${fadeIn} 600ms;\n        `}>{children}</main>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    social {\n                        twitter\n                    }\n                }\n            }\n        }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nSeo.defaultProps = {\n  description: ``\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nexport default Seo;\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import { keyframes } from \"@emotion/react\";\n\nexport const fadeIn = keyframes`\n        0% { opacity: 0; }\n      100% { opacity: 1; }\n`;\nexport const scaleUp = keyframes`\n        0% { transform: scale(0); }\n      100% { transform: scale(1); }\n`;\nexport const wriggleRight = keyframes`\n        0% { transform: translateX(0); }\n      50% { transform: translateX(-12px); }\n      100% { transform: translateX(0); }\n`;"],"names":["theme","useTheme","___EmotionJSX","css","colors","default","Date","getFullYear","Link","to","location","children","title","isRootPath","pathname","fadeIn","Footer","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","social","twitter","defaultProps","_taggedTemplateLiteralLoose","strings","raw","slice","keyframes","wriggleRight"],"sourceRoot":""}