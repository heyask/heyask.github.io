{"version":3,"file":"022d3153bf09c36cd784dcdb36ffbd187f9c96d7-b74741556df15913270a.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@mdi/react/Icon.js","webpack://gatsby-starter-blog/./node_modules/camelcase/index.js","webpack://gatsby-starter-blog/../src/image-utils.ts","webpack://gatsby-starter-blog/../src/components/hooks.ts","webpack://gatsby-starter-blog/../src/components/picture.tsx","webpack://gatsby-starter-blog/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog/../src/components/placeholder.tsx","webpack://gatsby-starter-blog/../src/components/main-image.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.tsx"],"sourcesContent":["module.exports = function (e) {\n  var t = {};\n\n  function r(n) {\n    if (t[n]) return t[n].exports;\n    var o = t[n] = {\n      i: n,\n      l: !1,\n      exports: {}\n    };\n    return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;\n  }\n\n  return r.m = e, r.c = t, r.d = function (e, t, n) {\n    r.o(e, t) || Object.defineProperty(e, t, {\n      enumerable: !0,\n      get: n\n    });\n  }, r.r = function (e) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  }, r.t = function (e, t) {\n    if (1 & t && (e = r(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (r.r(n), Object.defineProperty(n, \"default\", {\n      enumerable: !0,\n      value: e\n    }), 2 & t && \"string\" != typeof e) for (var o in e) {\n      r.d(n, o, function (t) {\n        return e[t];\n      }.bind(null, o));\n    }\n    return n;\n  }, r.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e.default;\n    } : function () {\n      return e;\n    };\n    return r.d(t, \"a\", t), t;\n  }, r.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, r.p = \"\", r(r.s = 2);\n}([function (e, t) {\n  e.exports = require(\"prop-types\");\n}, function (e, t) {\n  e.exports = require(\"react\");\n}, function (e, t, r) {\n  \"use strict\";\n\n  r.r(t);\n\n  var n = r(1),\n      o = r(0),\n      _l = function l() {\n    return (_l = Object.assign || function (e) {\n      for (var t, r = 1, n = arguments.length; r < n; r++) {\n        for (var o in t = arguments[r]) {\n          Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n        }\n      }\n\n      return e;\n    }).apply(this, arguments);\n  },\n      i = function i(e, t) {\n    var r = {};\n\n    for (var n in e) {\n      Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);\n    }\n\n    if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {\n      var o = 0;\n\n      for (n = Object.getOwnPropertySymbols(e); o < n.length; o++) {\n        t.indexOf(n[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[o]) && (r[n[o]] = e[n[o]]);\n      }\n    }\n\n    return r;\n  },\n      a = 0,\n      s = n.forwardRef(function (e, t) {\n    var r = e.title,\n        o = void 0 === r ? null : r,\n        s = e.description,\n        c = void 0 === s ? null : s,\n        u = e.size,\n        p = void 0 === u ? null : u,\n        f = e.color,\n        d = void 0 === f ? \"currentColor\" : f,\n        y = e.horizontal,\n        v = void 0 === y ? null : y,\n        b = e.vertical,\n        m = void 0 === b ? null : b,\n        h = e.rotate,\n        g = void 0 === h ? null : h,\n        O = e.spin,\n        w = void 0 === O ? null : O,\n        j = e.style,\n        z = void 0 === j ? {} : j,\n        E = e.children,\n        P = i(e, [\"title\", \"description\", \"size\", \"color\", \"horizontal\", \"vertical\", \"rotate\", \"spin\", \"style\", \"children\"]);\n    a++;\n\n    var S,\n        x = null !== w && w,\n        _ = n.Children.map(E, function (e) {\n      var t = e;\n      !0 !== x && (x = !0 === (null === w ? t.props.spin : w));\n      var r = t.props.size;\n      \"number\" == typeof p && \"number\" == typeof t.props.size && (r = t.props.size / p);\n      var o = {\n        size: r,\n        color: null === d ? t.props.color : d,\n        horizontal: null === v ? t.props.horizontal : v,\n        vertical: null === m ? t.props.vertical : m,\n        rotate: null === g ? t.props.rotate : g,\n        spin: null === w ? t.props.spin : w,\n        inStack: !0\n      };\n      return n.cloneElement(t, o);\n    });\n\n    null !== p && (z.width = \"string\" == typeof p ? p : 1.5 * p + \"rem\");\n    var k,\n        T = \"stack_labelledby_\" + a,\n        q = \"stack_describedby_\" + a;\n    if (o) S = c ? T + \" \" + q : T;else if (k = \"presentation\", c) throw new Error(\"title attribute required when description is set\");\n    return n.createElement(\"svg\", _l({\n      ref: t,\n      viewBox: \"0 0 24 24\",\n      style: z,\n      role: k,\n      \"aria-labelledby\": S\n    }, P), o && n.createElement(\"title\", {\n      id: T\n    }, o), c && n.createElement(\"desc\", {\n      id: q\n    }, c), x && n.createElement(\"style\", null, \"@keyframes spin { from { transform: rotate(0deg) } to { transform: rotate(360deg) } }\", \"@keyframes spin-inverse { from { transform: rotate(0deg) } to { transform: rotate(-360deg) } }\"), _);\n  });\n\n  s.displayName = \"Stack\", s.propTypes = {\n    size: o.oneOfType([o.number, o.string]),\n    color: o.string,\n    horizontal: o.bool,\n    vertical: o.bool,\n    rotate: o.number,\n    spin: o.oneOfType([o.bool, o.number]),\n    children: o.oneOfType([o.arrayOf(o.node), o.node]).isRequired,\n    className: o.string,\n    style: o.object\n  }, s.defaultProps = {\n    size: null,\n    color: null,\n    horizontal: null,\n    vertical: null,\n    rotate: null,\n    spin: null\n  };\n  var c = s;\n  r.d(t, \"Icon\", function () {\n    return d;\n  }), r.d(t, \"Stack\", function () {\n    return c;\n  });\n\n  var _u = function u() {\n    return (_u = Object.assign || function (e) {\n      for (var t, r = 1, n = arguments.length; r < n; r++) {\n        for (var o in t = arguments[r]) {\n          Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n        }\n      }\n\n      return e;\n    }).apply(this, arguments);\n  },\n      p = function p(e, t) {\n    var r = {};\n\n    for (var n in e) {\n      Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);\n    }\n\n    if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {\n      var o = 0;\n\n      for (n = Object.getOwnPropertySymbols(e); o < n.length; o++) {\n        t.indexOf(n[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[o]) && (r[n[o]] = e[n[o]]);\n      }\n    }\n\n    return r;\n  },\n      f = 0,\n      d = n.forwardRef(function (e, t) {\n    var r = e.path,\n        o = e.id,\n        l = void 0 === o ? ++f : o,\n        i = e.title,\n        a = void 0 === i ? null : i,\n        s = e.description,\n        c = void 0 === s ? null : s,\n        d = e.size,\n        y = void 0 === d ? null : d,\n        v = e.color,\n        b = void 0 === v ? \"currentColor\" : v,\n        m = e.horizontal,\n        h = void 0 !== m && m,\n        g = e.vertical,\n        O = void 0 !== g && g,\n        w = e.rotate,\n        j = void 0 === w ? 0 : w,\n        z = e.spin,\n        E = void 0 !== z && z,\n        P = e.style,\n        S = void 0 === P ? {} : P,\n        x = e.inStack,\n        _ = void 0 !== x && x,\n        k = p(e, [\"path\", \"id\", \"title\", \"description\", \"size\", \"color\", \"horizontal\", \"vertical\", \"rotate\", \"spin\", \"style\", \"inStack\"]),\n        T = {},\n        q = [];\n\n    null !== y && (_ ? q.push(\"scale(\" + y + \")\") : (S.width = \"string\" == typeof y ? y : 1.5 * y + \"rem\", S.height = S.width)), h && q.push(\"scaleX(-1)\"), O && q.push(\"scaleY(-1)\"), 0 !== j && q.push(\"rotate(\" + j + \"deg)\"), null !== b && (T.fill = b);\n    var M = n.createElement(\"path\", _u({\n      d: r,\n      style: T\n    }, _ ? k : {})),\n        C = M;\n    q.length > 0 && (S.transform = q.join(\" \"), S.transformOrigin = \"center\", _ && (C = n.createElement(\"g\", {\n      style: S\n    }, M, n.createElement(\"rect\", {\n      width: \"24\",\n      height: \"24\",\n      fill: \"transparent\"\n    }))));\n    var I,\n        N = C,\n        R = !0 === E || \"number\" != typeof E ? 2 : E,\n        B = !_ && (h || O);\n    if (R < 0 && (B = !B), E && (N = n.createElement(\"g\", {\n      style: {\n        animation: \"spin\" + (B ? \"-inverse\" : \"\") + \" linear \" + Math.abs(R) + \"s infinite\",\n        transformOrigin: \"center\"\n      }\n    }, C, !(h || O || 0 !== j) && n.createElement(\"rect\", {\n      width: \"24\",\n      height: \"24\",\n      fill: \"transparent\"\n    }))), _) return N;\n    var X,\n        Y = \"icon_labelledby_\" + l,\n        A = \"icon_describedby_\" + l;\n    if (a) I = c ? Y + \" \" + A : Y;else if (X = \"presentation\", c) throw new Error(\"title attribute required when description is set\");\n    return n.createElement(\"svg\", _u({\n      ref: t,\n      viewBox: \"0 0 24 24\",\n      style: S,\n      role: X,\n      \"aria-labelledby\": I\n    }, k), a && n.createElement(\"title\", {\n      id: Y\n    }, a), c && n.createElement(\"desc\", {\n      id: A\n    }, c), !_ && E && (B ? n.createElement(\"style\", null, \"@keyframes spin-inverse { from { transform: rotate(0deg) } to { transform: rotate(-360deg) } }\") : n.createElement(\"style\", null, \"@keyframes spin { from { transform: rotate(0deg) } to { transform: rotate(360deg) } }\")), N);\n  });\n\n  d.displayName = \"Icon\", d.propTypes = {\n    path: o.string.isRequired,\n    size: o.oneOfType([o.number, o.string]),\n    color: o.string,\n    horizontal: o.bool,\n    vertical: o.bool,\n    rotate: o.number,\n    spin: o.oneOfType([o.bool, o.number]),\n    style: o.object,\n    inStack: o.bool,\n    className: o.string\n  }, d.defaultProps = {\n    size: null,\n    color: \"currentColor\",\n    horizontal: !1,\n    vertical: !1,\n    rotate: 0,\n    spin: !1\n  };\n  t.default = d;\n}]);","'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n"],"names":["module","exports","e","t","r","n","o","i","l","call","m","c","d","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","_l","assign","arguments","length","apply","this","a","forwardRef","title","description","u","size","f","color","y","horizontal","v","b","vertical","h","rotate","g","O","spin","w","j","style","z","E","children","P","indexOf","getOwnPropertySymbols","propertyIsEnumerable","S","x","_","Children","map","props","inStack","cloneElement","width","k","T","q","Error","createElement","ref","viewBox","role","id","displayName","propTypes","oneOfType","number","string","bool","arrayOf","node","isRequired","className","object","defaultProps","_u","path","push","height","fill","M","C","transform","join","transformOrigin","I","N","R","B","animation","Math","abs","X","Y","A","camelCase","input","options","Array","isArray","TypeError","pascalCase","trim","filter","toUpperCase","toLowerCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","replace","p1","charAt","images","_node$images","fallback","_node$images$fallback","src","Boolean","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","format","isLoading","isLoaded","loading","shouldLoad","opacity","placeholder","layout","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","Fragment","Sizer","H","srcSet","decoding","undefined","sizes","Image","media","type","key","PropTypes","Picture","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","onError","as","preactClass","class","onStartLoad","onLoad","overflow","getWrapperProps","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","getSizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage"],"sourceRoot":""}