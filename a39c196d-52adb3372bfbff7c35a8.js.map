{"version":3,"file":"a39c196d-52adb3372bfbff7c35a8.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Link from \"../components/link\";\nimport { css } from \"@emotion/react\";\nimport { useTheme } from \"@emotion/react\";\nimport { getRandomCatImage } from \"../components/utils\";\nimport { GatsbyImage, getImage, StaticImage } from \"gatsby-plugin-image\";\nimport { useMemo, useState } from \"react\";\nimport { wriggleRight } from \"../styles/keyframes\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n  const categories = useMemo<string[]>(() => [...new Set(posts.map((post) => post.frontmatter.category) as string[])], []);\n  const [selectedCategory, selectSelectedCategory] = useState(null);\n  const theme = useTheme();\n  const catImage = getRandomCatImage();\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          포스트가 없습니다.\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div css={css`\n        list-style: none;\n        // max-width: ${theme.breakpoints[3]}px;\n        max-width: 800px;\n        margin: 0 auto;\n        padding: 30px 24px;\n        ${theme.mq[0]} {\n          padding: 24px 24px;\n        }\n      `}>\n        <div css={css`\n            width: fit-content;\n            display: block;\n            text-align: center;\n            border: 4px solid ${theme.colors.default[16]};\n            padding: 30px 60px;\n            margin: 30px auto 50px auto;\n          `}>\n          <p>✍️</p>\n          <h2 css={css`color: ${theme.colors.default[25]};`}>\n            개발자 김승현\n          </h2>\n          <p css={css`font-weight: 200; color: ${theme.colors.default[16]};`}>그릿을 해빗으로</p>\n        </div>\n        <div css={css`\n            margin-bottom: 16px;\n            overflow-x: scroll;\n            &::-webkit-scrollbar {\n              display: none;\n            }\n          `}>\n          <div css={css`\n            display: flex;\n            white-space: nowrap;\n            animation: ${wriggleRight} 2s;\n          `}>\n            {[null, ...categories].map((category) =>\n              <span key={category} onClick={e => selectSelectedCategory(category)}\n                    css={css`\n                      background: ${category == selectedCategory ? theme.colors.primary : theme.colors.default[1]}; \n                      color: ${category == selectedCategory ? \"white\" : theme.colors.default[20]}; \n                      padding: 8px 16px; \n                      margin-right: 12px; \n                      border-radius: 50px; \n                      cursor: pointer;\n                      font-size: 14px;\n                      ${theme.mq[0]} {\n                        margin-right: 6px;\n                      }\n                    `}\n              >{category ?? \"전체\"}</span>)}\n          </div>\n        </div>\n        <ol css={css`\n          list-style: none;\n          margin: 0;\n          padding: 0;\n        `}>\n          {posts.map(post => {\n            if (selectedCategory != null && selectedCategory != post.frontmatter.category) return;\n            const title = post.frontmatter.title || post.fields.slug;\n            const image = getImage(post.frontmatter.thumbnail);\n\n            return (\n              <Link key={post.fields.slug}\n                    to={post.fields.slug}\n                    style={css`\n                display:block;\n                &:hover {\n                  h2 {\n                    transform: translateX(3px);\n                  }\n                  background: ${theme.colors.default[0]};\n                }\n              `}>\n                <li>\n                  <article\n                    itemScope\n                    itemType=\"https://schema.org/Article\"\n                    css={css`\n                      display: flex;\n                      margin-bottom: 36px;\n                      border: 1px solid ${theme.colors.default[1]};\n                      ${theme.mq[0]} {\n                        flex-direction: column-reverse;\n                        padding: 0;\n                      }\n                  `}>\n                    <div css={css`\n                      flex-grow: 1;\n                      padding: 24px 0 24px 24px;\n                      ${theme.mq[0]} {\n                        padding: 12px 24px;\n                      }\n                    `}>\n                      <header>\n                        <div css={css`color: ${theme.colors.default[10]};`}>\n                          <small>{post.frontmatter.category} | {post.frontmatter.date}</small>\n                        </div>\n                        <h2 css={css`\n                          margin: 6px 0 8px 0;\n                          font-size: 16pt;\n                          transition: transform 100ms;\n                          ${theme.mq[0]} {\n                            font-weight: 800;\n                            font-size: 18px;\n                          }\n                        `}>\n                          {title}\n                        </h2>\n                      </header>\n                      <section>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: post.frontmatter.description || post.excerpt\n                          }}\n                          itemProp=\"description\"\n                          css={css`\n                            display: box;\n                            font-size: 14px;\n                            line-height: 20px;\n                            margin: 0;\n                            color: ${theme.colors.default[10]};\n                            word-break: break-all;\n                          `} />\n                      </section>\n                    </div>\n                    <div css={css`\n                      margin: 24px;\n                      ${theme.mq[0]} {\n                        font-weight: 800;\n                        margin: 0;\n                      }\n                    `}>\n                      {image ?\n                        <GatsbyImage\n                          image={image}\n                          alt={post.thumbnail?.name ?? \"thumbnail\"}\n                          css={css`\n                            min-width: 150px;\n                            max-width: 150px;\n                            min-height: 150px;\n                            max-height: 150px;\n                            object-fit: cover;\n                            align-self: center;\n                            ${theme.mq[0]} {\n                              min-width: 100%;\n                              max-width: 100%;\n                              min-height: 150px;\n                              max-height: 150px;\n                            }\n                          `}\n                        />\n                        :\n                        <img\n                          src={catImage}\n                          width={150}\n                          height={150}\n                          alt=\"thumbnail\"\n                          css={css`\n                            min-width: 150px;\n                            max-width: 150px;\n                            min-height: 150px;\n                            max-height: 150px;\n                            object-fit: cover;\n                            ${!post.frontmatter.thumbnail?.publicURL && \"filter: grayscale(100%) contrast(50%);\"}\n                            align-self: center;\n                            ${theme.mq[0]} {\n                              min-width: 100%;\n                              max-width: 100%;\n                              min-height: 150px;\n                              max-height: 150px;\n                            }\n                          `}\n                        />}\n                    </div>\n                  </article>\n                </li>\n              </Link>\n            );\n          })}\n        </ol>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" lang={undefined} children={undefined} />;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { category: { ne: null } } }\n        ) {\n            nodes {\n                excerpt\n                fields {\n                    slug\n                }\n                frontmatter {\n                    date(formatString: \"YYYY-MM-DD\")\n                    title\n                    description\n                    category\n                    thumbnail {\n                        name\n                        childImageSharp {\n                            gatsbyImageData(\n                                width: 600\n                                placeholder: BLURRED\n                                formats: [AUTO, WEBP, AVIF]\n                            )\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","categories","useMemo","Set","map","post","frontmatter","category","useState","selectedCategory","selectSelectedCategory","theme","useTheme","catImage","getRandomCatImage","length","___EmotionJSX","Layout","Bio","css","mq","colors","default","wriggleRight","key","onClick","e","primary","fields","slug","image","getImage","thumbnail","Link","to","style","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt","itemProp","GatsbyImage","alt","_post$thumbnail","name","src","width","height","_post$frontmatter$thu","publicURL","Head","Seo","lang","undefined","children"],"sourceRoot":""}