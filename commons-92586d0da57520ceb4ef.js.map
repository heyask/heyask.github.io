{"version":3,"file":"commons-92586d0da57520ceb4ef.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","webpack://gatsby-starter-blog/./node_modules/@emotion/css/dist/emotion-css.esm.js","webpack://gatsby-starter-blog/./src/components/button.tsx","webpack://gatsby-starter-blog/./src/components/header.tsx","webpack://gatsby-starter-blog/./src/styles/global.tsx","webpack://gatsby-starter-blog/./src/components/footer.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/link.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx"],"sourcesContent":["import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;","import '@emotion/cache';\nimport '@emotion/serialize';\nimport '@emotion/utils';\nimport createEmotion from '../create-instance/dist/emotion-css-create-instance.esm.js';\n\nvar _createEmotion = createEmotion({\n  key: 'css'\n}),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { cache, css, cx, flush, getRegisteredStyles, hydrate, injectGlobal, keyframes, merge, sheet };","import * as React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport { css } from \"@emotion/css\";\nimport { useTheme } from \"@emotion/react\";\nimport { dark, light } from \"../styles/theme\";\n\nconst Button = ({ className, children, onClick }: any) => {\n  const theme = useTheme();\n  return (\n    <button className={css`\n      width: 50px;\n      height: 50px;\n      border-width: 0;\n      border-radius: 100px;\n      padding: 10px;\n      margin: 5px 0;\n      cursor: pointer;\n      background-color: transparent;\n      &:hover {\n        background: ${theme.colors.default[1]}\n      }\n    `} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import * as React from \"react\";\nimport { css, cx } from \"@emotion/css\";\nimport { useTheme } from \"@emotion/react\";\nimport { useRecoilState } from \"recoil\";\nimport { light, dark, themeState } from \"../styles/theme\";\nimport Link from \"./link\";\nimport lottie, { AnimationItem } from \"lottie-web\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport Button from \"./button\";\n\nconst Header = ({ location, title }) => {\n  const [appTheme, setAppTheme] = useRecoilState(themeState);\n  const theme = useTheme();\n  const sun = useRef();\n  // let sunAnim = useRef<any>();\n  const sunAnim = useMemo(() => {\n    if(typeof window != \"undefined\") {\n      return lottie.loadAnimation({\n        container: sun.current,\n        renderer: \"svg\",\n        loop: false,\n        autoplay: false,\n        animationData: require(\"../assets/anim/sun.json\")\n      })\n    } else {\n      return {};\n    }\n\n  }, [sun])\n\n  // useEffect(() => {\n  //   console.log(1);\n  //   console.log(sunAnim.current);\n  //   if (!sunAnim.current) {\n  //     sunAnim.current = lottie.loadAnimation({\n  //       container: sun.current,\n  //       renderer: \"svg\",\n  //       loop: false,\n  //       autoplay: false,\n  //       animationData: require(\"../assets/anim/sun.json\")\n  //     });\n  //   }\n  //   console.log(sunAnim.current);\n  //\n  // }, []);\n  useEffect(() => {\n    console.log(theme.key);\n    sunAnim.setDirection(theme.key == light.key ? -1 : 1);\n    sunAnim.play();\n  }, [theme]);\n\n\n  return (\n    <div className={css`\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      background: ${theme.colors.default[0]};\n      z-index: 999;\n      border-bottom: 1px solid ${theme.colors.default[1]};\n    `}>\n      <div className={css`\n        margin: 0 auto;\n        padding: 0 24px;\n        max-width: ${theme.breakpoints[3]}px;\n        display: flex;\n        align-items: center;\n      `}>\n        <div>\n          <Link to=\"/\" className={css`\n          font-size: 16pt;\n        `}>\n            {title}\n          </Link>\n        </div>\n        <div className={css`flex-grow: 1;`} />\n        <Button>\n          <Link to={`/about`}>소개</Link>\n        </Button>\n        <Button className={css`\n          width: 50px;\n          height: 50px;\n          padding: 10px;\n          margin: 5px 0;\n        `} onClick={e => {\n          setAppTheme(appTheme == light.key ? dark.key : light.key);\n        }}>\n          <span ref={sun} className={css`\n            svg {\n              filter: invert(${theme.key == \"dark\" ? 80 : 20}%);\n              transition: filter 1s;\n            }\n          `} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { css, Theme } from \"@emotion/react\";\n\nexport const GlobalStyle = (theme: Theme) => (css`\n:root {\n  font-family: \"Nanum Gothic\";\n}\na {\n  text-decoration: none;\n}\n* {\n  transition: background 300ms, border 300ms, color 100ms;\n}\n`);","import * as React from \"react\";\nimport { css, cx } from \"@emotion/css\";\nimport { useTheme } from \"@emotion/react\";\nimport { useRecoilState } from \"recoil\";\nimport { light, dark, themeState } from \"../styles/theme\";\nimport Link from \"./link\";\nimport lottie, { AnimationItem } from \"lottie-web\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nconst Footer = () => {\n  const theme = useTheme();\n\n  return (\n    <footer className={css`\n        border-top: 1px solid ${theme.colors.default[1]};\n        padding: 50px 0px;\n        text-align: center;\n        background: ${theme.colors.default[0]};\n        color: ${theme.colors.default[10]}\n        `}>\n      © {new Date().getFullYear()}, Built with\n      {` `}\n      <Link to=\"https://www.gatsbyjs.com\">Gatsby</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { Global, ThemeProvider, useTheme } from \"@emotion/react\";\nimport { css, cx } from \"@emotion/css\";\nimport Header from \"./header\";\nimport BaseLayout from \"./base-layout\";\nimport { GlobalStyle } from \"../styles/global\";\nimport Footer from \"./footer\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Global styles={GlobalStyle(theme)} />\n      <div className={css`\n        background: ${theme.colors.default[0]};\n        min-height: 100vh;\n      `} data-is-root-path={isRootPath}>\n        <Header location={location} title={title} />\n        <main className={css`\n          max-width: ${theme.breakpoints[3]}px;\n          margin: 60px auto;\n        `}>{children}</main>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport { css } from \"@emotion/css\";\nimport { useTheme } from \"@emotion/react\";\n\nconst Link = ({ to, className, children }: any) => {\n  const theme = useTheme();\n  return (\n    <GatsbyLink to={to} className={css`\n      color: ${theme.colors.default[25]};\n      &:visited {\n        color: ${theme.colors.default[25]};\n      }\n      &:hover {\n        color: ${theme.colors.default[16]};\n      }\n      &:active {\n        color: ${theme.colors.default[10]};\n      }\n      ${className};\n    `}>\n      {children}\n    </GatsbyLink>\n  );\n};\n\nexport default Link;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    social {\n                        twitter\n                    }\n                }\n            }\n        }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nSeo.defaultProps = {\n  description: ``\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nexport default Seo;\n"],"names":["insertWithoutScoping","cache","serialized","undefined","inserted","name","insert","sheet","merge","registered","css","className","registeredStyles","rawClassName","length","classnames","args","cls","i","arg","toAdd","Array","isArray","k","options","speedy","value","this","isSpeedy","compat","_len","arguments","_key","key","cx","_len4","_key4","injectGlobal","_len3","_key3","keyframes","_len2","_key2","animation","styles","hydrate","ids","forEach","flush","getRegisteredStyles","bind","_createEmotion","children","onClick","theme","useTheme","___EmotionJSX","colors","default","location","title","useRecoilState","themeState","appTheme","setAppTheme","sun","useRef","sunAnim","useMemo","window","lottie","container","current","renderer","loop","autoplay","animationData","require","useEffect","console","log","setDirection","light","play","breakpoints","Link","to","Button","e","dark","ref","GlobalStyle","Date","getFullYear","isRootPath","pathname","Global","Header","Footer","GatsbyLink","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","content","property","social","twitter","defaultProps"],"sourceRoot":""}