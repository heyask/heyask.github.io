{"version":3,"file":"commons-a5531d3ecee993cfc119.js","mappings":"iMAEaA,EAAc,SAACC,GAAD,OAAmBC,EAAAA,EAAAA,IAAlB,qDAKZD,EAAME,OAAOC,QAAQ,GALV,8FAApB,E,UCyBP,EAlBe,WACb,IAAMH,GAAQI,EAAAA,EAAAA,KAEd,OACEC,EAAAA,EAAAA,IAAAA,SAAAA,CAAQJ,KAAKA,EAAAA,EAAAA,IAAF,wBACiBD,EAAME,OAAOC,QAAQ,GADtC,kDAIOH,EAAME,OAAOC,QAAQ,GAJ5B,UAKEH,EAAME,OAAOC,QAAQ,IALvB,eAAX,MAOK,IAAIG,MAAOC,cAPhB,oBASEF,EAAAA,EAAAA,IAACG,EAAAA,EAAD,CAAMC,GAAG,4BAAT,UAbN,E,iDCqBA,EArBe,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,SAAiBC,GAAe,EAAtBC,MAAsB,EAAfD,UAE3BE,EADQ,MACKH,EAASI,SACtBd,GAAQI,EAAAA,EAAAA,KAEd,OACEC,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACU,EAAAA,GAAD,CAAQC,OAAQjB,EAAYC,MAC5BK,EAAAA,EAAAA,IAAAA,MAAAA,CAAKJ,IAAG,EAEL,oBAAmBY,IACpBR,EAAAA,EAAAA,IAAAA,OAAAA,CAAMJ,KAAKA,EAAAA,EAAAA,IAAF,aACMD,EAAMiB,YAAY,GADxB,kCAGLN,IACJN,EAAAA,EAAAA,IAACa,EAAD,OAfR,C,yDCEMC,EAAM,SAAC,GAA4C,IAAD,MAAzCC,EAAyC,EAAzCA,YAAmBR,GAAsB,EAA5BS,KAA4B,EAAtBT,OAAOD,EAAe,EAAfA,SAC/BW,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAGE,EAAmBf,MAExC,OACEP,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAAAA,QAAAA,KAAQqB,EAAkBd,EAAN,MAAiBc,EAAiBd,IACtDP,EAAAA,EAAAA,IAAAA,OAAAA,CAAMuB,KAAK,cAAcC,QAASL,KAClCnB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,SAAS,WAAWD,QAASjB,KACnCP,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,SAAS,iBAAiBD,QAASL,KACzCnB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,SAAS,UAAUD,QAAQ,aACjCxB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMuB,KAAK,eAAeC,QAAQ,aAClCxB,EAAAA,EAAAA,IAAAA,OAAAA,CACEuB,KAAK,kBACLC,SAAS,UAAAP,EAAKG,oBAAL,mBAAmBM,cAAnB,eAA2BC,UAA3B,MAEX3B,EAAAA,EAAAA,IAAAA,OAAAA,CAAMuB,KAAK,gBAAgBC,QAASjB,KACpCP,EAAAA,EAAAA,IAAAA,OAAAA,CAAMuB,KAAK,sBAAsBC,QAASL,IACzCb,EAlCP,EAuCAQ,EAAIc,aAAe,CACjBb,YAAY,IAQd,K","sources":["webpack://gatsby-starter-blog/./src/styles/global.tsx","webpack://gatsby-starter-blog/./src/components/footer.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx"],"sourcesContent":["import { css, Theme } from \"@emotion/react\";\n\nexport const GlobalStyle = (theme: Theme) => (css`\n:root {\n  font-family: \"Nanum Gothic\";\n}\nbody {\n  background: ${theme.colors.default[0]};\n}\na {\n  text-decoration: none;\n}\n* {\n  transition: background 300ms, border 300ms, color 100ms;\n}\n`);","import * as React from \"react\";\nimport { css } from \"@emotion/react\";\nimport { useTheme } from \"@emotion/react\";\nimport { useRecoilState } from \"recoil\";\nimport { light, dark, themeState } from \"../styles/theme\";\nimport Link from \"./link\";\nimport lottie, { AnimationItem } from \"lottie-web\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nconst Footer = () => {\n  const theme = useTheme();\n\n  return (\n    <footer css={css`\n        border-top: 1px solid ${theme.colors.default[1]};\n        padding: 50px 0px;\n        text-align: center;\n        background: ${theme.colors.default[0]};\n        color: ${theme.colors.default[10]}\n        `}>\n      Â© {new Date().getFullYear()}, Built with\n      {` `}\n      <Link to=\"https://www.gatsbyjs.com\">Gatsby</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { Global, ThemeProvider, useTheme } from \"@emotion/react\";\nimport { css } from \"@emotion/react\";\nimport Header from \"./header\";\nimport BaseLayout from \"./base-layout\";\nimport { GlobalStyle } from \"../styles/global\";\nimport Footer from \"./footer\";\nimport Test from \"./test\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  const theme = useTheme();\n\n  return (\n    <>\n      <Global styles={GlobalStyle(theme)} />\n      <div css={css`\n        min-height: 100vh;\n      `} data-is-root-path={isRootPath}>\n        <main css={css`\n          max-width: ${theme.breakpoints[3]}px;\n          margin: 60px auto;\n        `}>{children}</main>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                    description\n                    social {\n                        twitter\n                    }\n                }\n            }\n        }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n\nSeo.defaultProps = {\n  description: ``\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nexport default Seo;\n"],"names":["GlobalStyle","theme","css","colors","default","useTheme","___EmotionJSX","Date","getFullYear","Link","to","location","children","title","isRootPath","pathname","Global","styles","breakpoints","Footer","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","social","twitter","defaultProps"],"sourceRoot":""}